{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Persons","props","contacts","map","person","name","number","onClick","handleDelete","PersonForm","handleNameSubmit","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Filter","filterValue","handleFilterChange","Notification","message","Error","className","baseURL","axios","get","then","response","data","newObject","post","objectId","delete","put","id","App","useState","persons","setPersons","setNewName","setNewNumber","filter","setFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","personsService","filteredList","length","toLowerCase","indexOf","event","target","preventDefault","existingPerson","find","window","confirm","updatedPerson","i","setTimeout","catch","error","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dad36ff.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = (props) => {\n\n    return (\n        <>\n            {props.contacts.map(person => <p key={person.name}>{person.name} {person.number} <button onClick={() => props.handleDelete(person)}>delete</button></p>)}\n        </>\n    )\n}\n\nexport default Persons;","import React from 'react'\n\nconst PersonForm = ({handleNameSubmit, newName, handleNameChange, newNumber, handleNumberChange}) => {\n\n    return (\n        <form onSubmit={handleNameSubmit}>\n            <div>\n                name: <input value={newName} onChange={handleNameChange} />\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n      </form>\n    )\n}\n\nexport default PersonForm;","import React from 'react'\n\nconst Filter = ({filterValue, handleFilterChange}) => {\n    return (\n    <input value={filterValue} onChange={handleFilterChange} />\n    )\n}\n\nexport default Filter;","const Notification = ({ message, type }) => {\n    if (message === null) {\n      return null\n    }\n\n    if (type !== 'error' && type !== 'success') {\n        throw Error('unsupported notification type');\n    }\n  \n    return (\n      <div className={type}>\n        {message}\n      </div>\n    )\n  }\n\n  export default Notification;","import axios from 'axios'\n\nconst baseURL = '/api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseURL);\n\n    return request.then((response) => {\n        return response.data;\n    })\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseURL, newObject);\n\n    return request.then((response) => {\n        return response.data;\n    })\n}\n\nconst remove = (objectId) => {\n    const request = axios.delete(`${baseURL}/${objectId}`);\n\n    return request.then((response) => {\n        return response.data;\n    })\n}\n\nconst update = (newObject) => {\n    const request = axios.put(`${baseURL}/${newObject.id}`, newObject);\n\n    return request.then((response) => {\n        return response.data;\n    })\n}\n\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport personsService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ filter, setFilter ] = useState('');\n  const [ successMessage, setSuccessMessage ] = useState(null);\n  const [ errorMessage, setErrorMessage ] = useState(null);\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  }\n\n  const handleNameSubmit = (event) => {\n    event.preventDefault();\n    const existingPerson = persons.find(person => person.name === newName)\n    if (existingPerson) {\n      const result = window.confirm(`${existingPerson.name} is already added to the phonebook, replace the old number with a new one?`);\n      \n      if (result) {\n        const updatedPerson = {...existingPerson, number: newNumber}\n\n        personsService.update(updatedPerson).then((response) => {\n          setPersons(persons.map((i) => i.id === updatedPerson.id ? response : i));          \n          setSuccessMessage(`Updated ${response.name}`);\n          setTimeout(() => {\n            setSuccessMessage(null);\n          }, 5000);\n        }).catch((error) => {\n          setErrorMessage(`Experienced an error trying to update ${existingPerson.name}`);\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        })\n      }\n\n    } else {\n      personsService.create({name: newName, number: newNumber}).then((response) => {\n        setPersons([response, ...persons]);\n        setSuccessMessage(`Created ${newName}`)\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 5000);\n      }).catch((error) => {\n        setErrorMessage(`Exerienced an error trying to create ${newName}`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      })\n\n    }\n    setNewName('');\n    setNewNumber('');\n  }\n\n  const handleDelete = (person) => {\n    const result = window.confirm(`Delete ${person.name}?`);\n\n    if (result) {\n      personsService.remove(person.id).then((response) => {\n        setPersons(persons.filter(p => p.id !== person.id));\n        setSuccessMessage(`Deleted ${newName}`)\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 5000);\n      }).catch((error) => {\n        setErrorMessage(`Exerpeinced an error trying to delete the user`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      })\n\n    }\n  }\n\n  useEffect(() => {\n    personsService.getAll()\n      .then((response) => {\n        setPersons(response);\n      })\n  }, [])\n\n  let filteredList = filter.length > 0 ? persons.filter(person => person.name.toLowerCase().indexOf(filter.toLowerCase()) > -1) : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter \n        filterValue={filter}\n        handleFilterChange={handleFilterChange}\n      />\n      <h3>add a new</h3>\n      <Notification message={successMessage} type='success' /> \n      <Notification message={errorMessage} type='error' />\n      <PersonForm\n        handleNameSubmit={handleNameSubmit}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons contacts={filteredList} handleDelete={handleDelete}/>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}